[
  ["node_root",24478352],
  ["filename","./0064/index.php"],
  ["type",24478369,"IntegerLiteral"],
  ["image",24478369,"6"],
  ["line_begin",24478369,10],
  ["line_end",24478369,10],
  ["column_begin",24478369,156],
  ["column_end",24478369,156],
  ["token_begin",24478369,59],
  ["token_end",24478369,59],
  ["type",24478352,"FunctionCall"],
  ["image",24478352,"eval"],
  ["eval_pattern",24478352,3],
  ["eval_pattern",24478352,27],
  ["ast_succ",24478352,24478344],
  ["ast_succ",24478352,24478350],
  ["line_begin",24478352,10],
  ["line_end",24478352,10],
  ["column_begin",24478352,479],
  ["column_end",24478352,33083],
  ["token_begin",24478352,219],
  ["token_end",24478352,227],
  ["type",24478370,"DecodeFailed"],
  ["image",24478370,"FuncUnknown"],
  ["type",24478349,"FunctionCall"],
  ["ast_succ",24478349,24478345],
  ["ast_succ",24478349,24478347],
  ["datares_succ",24478349,24478369],
  ["line_begin",24478349,10],
  ["line_end",24478349,10],
  ["column_begin",24478349,487],
  ["column_end",24478349,33082],
  ["token_begin",24478349,222],
  ["token_end",24478349,226],
  ["type",24478348,"Argument"],
  ["ast_succ",24478348,24478346],
  ["type",24478351,"Argument"],
  ["ast_succ",24478351,24478349],
  ["dynres_succ",24478351,24478370],
  ["type",24478350,"ArgumentList"],
  ["ast_succ",24478350,24478351],
  ["line_begin",24478350,10],
  ["line_end",24478350,10],
  ["column_begin",24478350,480],
  ["column_end",24478350,33082],
  ["token_begin",24478350,220],
  ["token_end",24478350,226],
  ["type",24478345,"Variable"],
  ["image",24478345,"O00O0O"],
  ["var_id",24478345,430164],
  ["var_scope",24478345,0],
  ["line_begin",24478345,10],
  ["line_end",24478345,10],
  ["column_begin",24478345,481],
  ["column_end",24478345,486],
  ["token_begin",24478345,221],
  ["token_end",24478345,221],
  ["type",24478344,"Id"],
  ["image",24478344,"eval"],
  ["line_begin",24478344,10],
  ["line_end",24478344,10],
  ["column_begin",24478344,475],
  ["column_end",24478344,478],
  ["token_begin",24478344,218],
  ["token_end",24478344,218],
  ["type",24478347,"ArgumentList"],
  ["ast_succ",24478347,24478348],
  ["line_begin",24478347,10],
  ["line_end",24478347,10],
  ["column_begin",24478347,488],
  ["column_end",24478347,33081],
  ["token_begin",24478347,223],
  ["token_end",24478347,225],
  ["type",24478346,"StringExpression"],
  ["image",24478346,""],
  ["line_begin",24478346,10],
  ["line_end",24478346,10],
  ["column_begin",24478346,488],
  ["column_end",24478346,33081],
  ["token_begin",24478346,223],
  ["token_end",24478346,225]
]
